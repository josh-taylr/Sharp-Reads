apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def goodReadsPropertiesFile = rootProject.file("goodreads.properties")
def goodReadsProperties = new Properties()
goodReadsProperties.load(new FileInputStream(goodReadsPropertiesFile))

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "dev.josh.taylor.sharpreads"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "GoodReadsKey", goodReadsProperties["key"])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation project(path: ':architecture')
    implementation project(path: ':goodreadsapi')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.lifecycle:lifecycle-extensions:${lifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycleVersion}"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.mockito:mockito-core:3.3.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4'
    implementation "androidx.fragment:fragment-ktx:${fragmentVersion}"
    implementation "androidx.fragment:fragment-testing:${fragmentVersion}"
    implementation "androidx.recyclerview:recyclerview:${recyclerviewVersion}"
    implementation "com.google.dagger:dagger:${daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${lifecycleVersion}"
    implementation 'com.squareup.okhttp3:okhttp:3.14.6'

    androidTestImplementation('junit:junit:4.13') {
        because("Using androidTestImplementation creates clathpath issue in the IDE.")
    }
    testImplementation "androidx.test:core-ktx:${testVersion}"
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.3'

    androidTestImplementation "androidx.test:rules:${testVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${espressoVersion}"
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
}
